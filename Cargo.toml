[package]
name = "cargo-unmaintained"
version = "1.3.0"
authors = ["Samuel Moelius <sam@moeli.us>"]
description = "Find unmaintained packages in Rust projects"
edition = "2021"
license = "AGPL-3.0"
repository = "https://github.com/trailofbits/cargo-unmaintained"

[dependencies]
anyhow = { version = "1.0", features = ["backtrace"] }
cargo_metadata = "0.18"
chrono = "0.4"
clap = { version = "4.5", features = ["cargo", "derive", "wrap_help"] }
crates-index = { version = "3.0", features = ["git-https"] }
crates_io_api = "0.11.0"
curl = "0.4"
env_logger = "0.11"
home = "0.5"
log = "0.4"
once_cell = "1.19"
regex = "1.10"
remain = "0.2"
serde = "1.0"
serde_json = "1.0"
sha1_smol = { version = "1.0", features = ["std"] }
tempfile = "3.12"
termcolor = "1.4"
toml = "0.8"
walkdir = "2.5"

[target.'cfg(unix)'.dependencies]
libc = { version = "0.2", optional = true }
xdg = { version = "2.5", optional = true }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.59", features = [
    "Win32_Storage_FileSystem",
    "Win32_Foundation",
    "Win32_System_IO",
], optional = true }

[dev-dependencies]
assert_cmd = "2.0"
ctor = "0.2"
predicates = "3.1"
rayon = "1.10"
serde = "1.0"
similar-asserts = "1.5"
snapbox = "0.6"

[features]
default = ["on-disk-cache", "lock-index"]
cache-repositories = ["on-disk-cache"]
on-disk-cache = ["xdg"]
lock-index = ["libc", "windows-sys"]

[lints.rust.unexpected_cfgs]
level = "deny"
check-cfg = ["cfg(dylint_lib, values(any()))", "cfg(__warnings)"]

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
format-collect = "allow"
missing-errors-doc = "allow"
missing-panics-doc = "allow"

[workspace]
exclude = ["fixtures"]
members = ["ei"]

[[workspace.metadata.dylint.libraries]]
git = "https://github.com/trailofbits/dylint"
pattern = [
    "examples/general",
    "examples/supplementary",
    "examples/restriction/inconsistent_qualification",
    "examples/restriction/suboptimal_pattern",
    "examples/restriction/try_io_result",
]

[workspace.metadata.unmaintained]
ignore = ["adler", "foreign-types"]
